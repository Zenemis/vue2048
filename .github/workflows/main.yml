name: Lab 9 - CI/CD Pipeline via GitHub Actions

on:
  push:
    paths:
      - '**'
      - '!docs/**'
    branches:
      - main
  pull_request:
    paths:
      - '**'
      - '!docs/**'
  workflow_dispatch:
    inputs:
      run_static_analysis:
        description: 'Run static analysis?'
        default: 'true'
        required: true
      run_tests:
        description: 'Run tests?'
        default: 'true'
        required: true
  schedule:
    - cron: "0 8 * * 1" 

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request' || 
      github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name : Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: |
          npm install -g corepack
          corepack prepare pnpm@latest-8 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install

      - name: Build
        run: pnpm build

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/
          retention-days: 7  
          
      - name: Upload artifact
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/
          retention-days: 1
      
            
  tests-job:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name : Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: |
          npm install -g corepack
          corepack prepare pnpm@latest-8 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install

      - name: Run static typing analysis
        if: (github.event_name != 'workflow_dispatch') || github.event.inputs.run_static_analysis == 'true'
        run: pnpm type-check

      - name: Run linting analysis
        if: (github.event_name != 'workflow_dispatch') || github.event.inputs.run_static_analysis == 'true'
        run: pnpm lint

      - name : Run unit tests
        if: (github.event_name != 'workflow_dispatch') || github.event.inputs.run_tests == 'true'
        run: pnpm test

  deploy_qa:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name : Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: |
          npm install -g corepack
          corepack prepare pnpm@latest-8 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install -g vercel

      - name: Deploy to QA
        run: pnpm dlx vercel deploy --cwd dist/ --token=${{ secrets.VERCEL_ID }}
        # pnpm dlx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-qa --env=production
      
  deploy_prod:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name : Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: |
          npm install -g corepack
          corepack prepare pnpm@latest-8 --activate
          pnpm config set store-dir .pnpm-store
          pnpm install -g vercel

      - name: Deploy to Production
        run: pnpm dlx vercel deploy --prod --cwd dist/ --token=${{ secrets.VERCEL_ID }}
        # pnpm dlx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-prod --env=production

